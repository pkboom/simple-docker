version: '3'

networks:
  web:

volumes:
  mysql:
  redis:


x-inspire: &base-laravel-app
  build:
    context: .
    dockerfile: ./docker/production/Dockerfile
  image: inspire:${TAG:-latest}
  restart: always
  volumes:
    - ./.env:/var/www/html/.env
    - ./storage/app:/var/www/html/storage/app
    - ./storage/logs:/var/www/html/storage/logs
  networks:
    - web


services:
  inspire:
    <<: *base-laravel-app
    command: ["webserver"]
    depends_on:
      - inspire-fpm
    labels:
      - traefik.enable=true
      - traefik.http.routers.inspire.entrypoints=https
      - traefik.http.routers.inspire.rule=Host(`${INSPIRE_TRAEFIK_HOST:-example.com}`)
      - traefik.http.routers.inspire.service=inspire
      - traefik.http.services.inspire.loadbalancer.server.port=80
      - traefik.http.routers.inspire.tls.certresolver=leresolver
  inspire-fpm:
    <<: *base-laravel-app
    command: ["fpm"]
  inspire-worker:
    <<: *base-laravel-app
    command: ["worker"]
    user: forge
  inspire-cron:
    <<: *base-laravel-app
    entrypoint: ["cron", "-f"]

  mysql:
    image: 'mysql/mysql-server:8.0'
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - mysql:/var/lib/mysql
    networks:
      - web
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}" ]
      retries: 3
      timeout: 5s

  redis:
    restart: always
    image: 'redis:alpine'
    volumes:
      - redis:/data
    networks:
      - web
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      retries: 3
      timeout: 5s

  soketi:
    restart: always
    image: 'quay.io/soketi/soketi:latest-16-alpine'
    environment:
      SOKETI_DEFAULT_APP_ID: '${PUSHER_APP_ID}'
      SOKETI_DEFAULT_APP_KEY: '${PUSHER_APP_KEY}'
      SOKETI_DEFAULT_APP_SECRET: '${PUSHER_APP_SECRET}'
      SOKETI_DEBUG: '1'
      SOKETI_METRICS_SERVER_PORT: '9601'
    networks:
      - web
    labels:
      - traefik.enable=true
      - traefik.http.services.soketi.loadbalancer.server.port=6001
      - traefik.http.routers.soketi.rule=Host(`${SOKETI_TRAEFIK_HOST:-example.com}`)
      - traefik.http.routers.soketi.entrypoints=https
      - traefik.http.routers.soketi.tls.certresolver=leresolver

  traefik:
    image: traefik:v2.3
    restart: always
    networks:
      - web
    ports:
      - "80:80"
      - "443:443"
      # Uncomment for debug
      #- "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./storage/letsencrypt:/letsencrypt
      - ./traefik.auth:/auth/traefik.auth
    command:
      #- --api.dashboard=true
      # Uncomment for debug
      #- --api.insecure=true
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --certificatesresolvers.leresolver.acme.httpchallenge.entrypoint=http
      - --certificatesresolvers.leresolver.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.leresolver.acme.email=${LETS_ENCRYPT_EMAIL:-admin@example.com}
    labels:
      ## TRAEFIK ROUTER & DASHBOARD
      - traefik.enable=true
      - traefik.http.routers.traefik.entrypoints=https
      - traefik.http.routers.traefik.rule=Host(`${DASHBOARD_TRAEFIK_HOST:-example.com}`)
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.middlewares=auth
      - traefik.http.routers.traefik.tls.certresolver=leresolver
      - traefik.http.services.traefik.loadbalancer.server.port=8080

      ## Global redirect to HTTPS
      - traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)
      - traefik.http.routers.http-catchall.entrypoints=http
      - traefik.http.routers.http-catchall.middlewares=redirect-to-https

      ## Middlewares
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https

      ## AUTH
      - traefik.http.middlewares.auth.basicauth.usersfile=/auth/traefik.auth
